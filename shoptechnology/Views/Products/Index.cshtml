@model ShopTechnologyAccessories.Models.ProductListVm
@{
    ViewData["Title"] = "Sản phẩm";
}
<form class="row g-2 mb-3" method="get">
    <div class="col-md-4">
        <input name="q" value="@Model.Q" class="form-control" placeholder="Tìm kiếm theo tên" />
    </div>
    <div class="col-md-3">
        <select name="categoryId" class="form-select">
            <option value="">Tất cả danh mục</option>
            @foreach (var c in (IEnumerable<ShopTechnologyAccessories.Models.Category>)ViewBag.Categories)
            {
                var selected = Model.CategoryId == c.CategoryId ? "selected" : null;
                <option value="@c.CategoryId" selected="@selected">@c.CategoryName</option>
            }
        </select>
    </div>
    <div class="col-md-2">
        <input type="number" name="minPrice" value="@Model.MinPrice" class="form-control" placeholder="Giá từ" />
    </div>
    <div class="col-md-2">
        <input type="number" name="maxPrice" value="@Model.MaxPrice" class="form-control" placeholder="Giá đến" />
    </div>
    <div class="col-md-1">
        <button class="btn btn-primary w-100">Lọc</button>
    </div>
</form>

<div class="row row-cols-2 row-cols-md-3 row-cols-xl-4 g-3">
    @foreach (var p in Model.Products)
    {
        var img = p.ProductImages.FirstOrDefault(i => i.IsMain)?.ImageUrl ?? p.ProductImages.FirstOrDefault()?.ImageUrl ??
        "/favicon.ico";
        <div class="col">
            <div class="card product-card h-100">
                <img src="@img" class="card-img-top" alt="@p.ProductName" />
                <div class="card-body">
                    <h6 class="card-title">@p.ProductName</h6>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="price">@p.Price.ToString("N0") đ</span>
                        <div>
                            <a class="btn btn-sm btn-outline-secondary"
                                href="@Url.Action("Details", "Products", new { id = p.ProductId })">Xem</a>
                            @if (User.Identity?.IsAuthenticated ?? false)
                            {
                                <form class="d-inline" method="post" action="@Url.Action("Add", "Cart")">
                                    <input type="hidden" name="productId" value="@p.ProductId" />
                                    <button class="btn btn-sm btn-primary">Thêm</button>
                                </form>
                                <form class="d-inline" method="post" action="@Url.Action("AddToWishlist", "Wishlist")">
                                    <input type="hidden" name="productId" value="@p.ProductId" />
                                    <button class="btn btn-sm btn-outline-danger"><i class="bi bi-heart"></i></button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@{
    var canPrev = Model.Page > 1;
    var canNext = Model.Page < Model.TotalPages;
}
<nav class="mt-3" aria-label="Pagination">
    <ul class="pagination justify-content-center">
        <li class="page-item @(canPrev ? "" : "disabled")">
            <a class="page-link"
                href="@Url.Action("Index", new { q = Model.Q, categoryId = Model.CategoryId, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, page = Model.Page - 1, pageSize = Model.PageSize })">Trước</a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.Page ? "active" : "")">
                <a class="page-link"
                    href="@Url.Action("Index", new { q = Model.Q, categoryId = Model.CategoryId, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, page = i, pageSize = Model.PageSize })">@i</a>
            </li>
        }
        <li class="page-item @(canNext ? "" : "disabled")">
            <a class="page-link"
                href="@Url.Action("Index", new { q = Model.Q, categoryId = Model.CategoryId, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, page = Model.Page + 1, pageSize = Model.PageSize })">Sau</a>
        </li>
    </ul>
    <div class="text-center text-muted small">Trang @Model.Page / @Model.TotalPages — Tổng @Model.TotalItems sản phẩm
    </div>
</nav>
